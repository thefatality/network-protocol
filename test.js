// const Cap = require('cap').Cap;
// const decoders = require('cap').decoders;
// const PROTOCOL = decoders.PROTOCOL;
//
// const c = new Cap();
// const device = Cap.findDevice('172.20.10.2');
// const filter = 'tcp';
// const bufSize = 1024 * 1024 * 10;
// const buffer = Buffer.alloc(46);
//
// c.open(device, filter, bufSize, buffer);
//
// c.setMinBytes && c.setMinBytes(0);
//
// c.on('packet', function (nbytes, trunc) {
//   console.log('packet: length ' + nbytes + ' bytes, truncated? '
//     + (trunc ? 'yes' : 'no'));
//   console.log(buffer);
// });
//
//
// // 0xb6,0xf6,0xd6,0xba,0xc7,0x64,0xb0,0x52,0x16,0xc6,0xdb,0xd1,0x08,0x00,0x45,0x00,
// // 0x00,0x30,0x00,0x00,0x40,0x00,0x40,0x06,0x00,0x00,0xac,0x14,0x0a,0x02,0x27,0x9c,
// // 0x42,0x0e,0x27,0x66,0x01,0xbb,0xed,0x76,0x37,0x81,0x00,0x00,0x00,0x00,0x70,0x02,
// // 0x44,0x70,0xd1,0xcd,0x00,0x00,0x02,0x04,0x05,0xb4,0x01,0x03,0x03,0x08,
//
// const packet = Buffer.from([
//   0xb6, 0xf6, 0xd6, 0xba, 0xc7, 0x64, 0xb0, 0x52,
//   0x16, 0xc6, 0xdb, 0xd1, 0x08, 0x00, 0x45, 0x00,
//   0x00, 0x34, 0x2b, 0xac, 0x40, 0x00, 0x40, 0x06,
//   0xef, 0x57, 0xac, 0x14, 0x0a, 0x02, 0x27, 0x9c,
//   0x42, 0x0e, 0x18, 0x32, 0x01, 0xbb, 0x3c, 0x7f,
//   0xef, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02,
//   0x44, 0x70, 0xc4, 0x7e, 0x00, 0x00, 0x02, 0x04,
//   0x05, 0xb4, 0x01, 0x03, 0x03, 0x08, 0x01, 0x01,
//   0x04, 0x02
// ]);
//
// c.send(packet, packet.length)


const buf1=Buffer.from([1,2,3])
console.log(buf1.slice(3).length);



